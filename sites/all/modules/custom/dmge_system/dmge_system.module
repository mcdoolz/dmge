<?php

/**
 * @file
 * Render an administrative menu as a dropdown menu at the top of the window.
 */

/**
 * Implements hook_permission().
 */
function dmge_system_permission() {
  return array(
    'access dmge' => array(
      'title' => t('Access the DMGE'),
      'description' => t('Use the DMGE.'),
    ),
    'configure dmge' => array(
      'title' => t('Configure the DMGE'),
      'description' => t('Administrate the DMGE.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function dmge_system_theme() {
  return array(
    'dmge_system_main' => array(
      'variables' => NULL,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dmge_system_menu() {
  // Module settings.
  $items['admin/config/administration/dmge_system'] = array(
    'title' => 'DMGE',
    'description' => 'Adjust DMGE settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dmge_system_theme_settings'),
    'access arguments' => array('configure dmge'),
  );
  return $items;
}


function dmge_system_theme_settings($form = array()) {
  $form['markup']['#markup'] = "I should do something with this.";
  return $form;
}

/**
 * In case we need a redirect in code.
 */
function dmge_system_engine($form = array()) {
  $form['markup']['#markup'] = "hello world";
  return $form;
}

/**
 * Returns true if link is a patreon link.
 */
function _dmge_is_patreon($url) {
  if (strpos($url, 'patreon') !== FALSE) {
    return TRUE;
  }
}

/**
 * Helper rewrites url for provider.
 */
function _dmge_rewrite_url($url) {
  if (_dmge_is_patreon($url)) {
    $url = parse_url($url);
    $matches = array();
    preg_match('/h=(\d+)/', $url['query'], $matches);
    if (!empty($matches)) {
      $url = 'https://www.patreon.com/posts/' . $matches[1];
    }
  }
  return $url;
}

function dmge_system_form_user_login_block_alter(&$form, &$form_state) {
  _dmge_system_login_form_alter($form, $form_state);
}
function dmge_system_form_user_login_alter(&$form, &$form_state) {
  _dmge_system_login_form_alter($form, $form_state);
}
function dmge_system_form_user_register_form_alter(&$form, &$form_state) {
  _dmge_system_login_form_alter($form, $form_state);
}
function dmge_system_form_passwordless_login_alter(&$form, &$form_state) {
  _dmge_system_login_form_alter($form, $form_state);
}

function _dmge_system_login_form_alter(&$form, &$form_state = NULL) {
  if (module_exists('patreon_user')) {
    if (user_is_anonymous()) {
      if ($settings = (variable_get('patreon_user_registration', 0))) {
        $client_id = variable_get('patreon_client_id', NULL);
        $method = variable_get('patreon_user_registration_method', PATREON_USER_COPY_ACCOUNT);

        if ($url = patreon_authorise_account($client_id, patreon_user_get_callback_url(), FALSE)) {
          if ($method == PATREON_USER_COPY_ACCOUNT) {
            $title = t('Register via Patreon');
          }
          else {
            $title = t('Log on via Patreon');
          }
          $patreon_link = t('<a href="@url" id="user-login-patreon"><i class="fab fa-patreon">&nbsp;</i> @title</a>', array(
            '@url' => $url,
            '@title' => $title,
          ));
        }
      }
    }
  }
  $form['links']['#markup'] = '<div class="item-list"><ul><li class="first">' . $patreon_link . '</li><li class="last"><a href="/user/password" title="Request new password via e-mail." class="password-reset-link"><i class="fas fa-unlock-alt">&nbsp;</i> Request new password</a></li></ul></div>';
}

/**
 * Tried to alter values, but did it in the template instead (multifield didn't care about my alterations)
 */
function dmge_system_preprocess_field($vars) {
  switch ($vars['element']['#field_name']) {
    case 'field_resource_links':
    // $link = &$vars['element']['#items'][0]['field_resource_link'][LANGUAGE_NONE][0];
    // $link = &$vars['items'][0]['field_resource_link']['#items'][0];
    // if (strpos($link['url'], 'patreon') !== FALSE) {
    //   $url = parse_url($link['url']);
    //   $matches = array();
    //   preg_match('/h=(\d+)/', $url['query'], $matches);
    //   $link['display_url'] = 'https://www.patreon.com/posts/' . $matches[1];
    //   $link['url'] = $link['display_url'];
    // }
      break;

    default:
      // nothing
      break;
  }
}

/**
 * Alter search button.
 */
function dmge_system_form_library_resources_block_form_alter(&$form, $form_state) {
  $form['keys']['#attributes']['placeholder'][] = t('Search');
  $form['actions']['submit']['#value'] = html_entity_decode('&#xf002;');
}

/**
 * Implements hook_rest_server_execute_errors_alter().
 */
function dmge_system_rest_server_execute_errors_alter(&$error_alter_array, $controller, $arguments) {
  if ($error_alter_array['code'] === 401) {
    $error_alter_array['code'] = 400;
    // $error_alter_array['header_message'] = 'No love.';
    // $error_alter_array['body_data'] = 'Bad username or password.';
  }
}
